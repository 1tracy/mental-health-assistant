version: "3"

#-----Application-----

services:
  frontend:
    container_name: react
    build:
      context: frontend
      dockerfile: Dockerfile.prod
    restart: always
    depends_on:
      - backend
    networks:
      - nginx_frontend_network

  backend:
    container_name: backend
    build: backend
    restart: always
    environment:
      - FLASK_ENV=development
    env_file:
      - ./backend/.env
    depends_on:
      - db
    networks:
      - nginx_backend_network
      - backend_network

  db:
    container_name: mhaDb
    image: postgres
    restart: always
    env_file:
      - ./backend/.env
    volumes:
      - userdatabase:/var/lib/postgresql/data
    networks:
      - backend_network

  #-----Proxy-----

  nginx:
    container_name: nginx
    image: jonasal/nginx-certbot:latest
    restart: unless-stopped
    env_file:
      - ./nginx-certbot.env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx_secrets:/etc/letsencrypt
      - ./nginx/nginx.conf:/etc/nginx/user_conf.d/default.conf:ro
    networks:
      - nginx_frontend_network
      - nginx_backend_network

  #-----Monitoring-----

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    restart: unless-stopped
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: unless-stopped
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor

volumes:
  userdatabase:
  nginx_secrets:

networks:
  nginx_frontend_network:
  nginx_backend_network:
  backend_network:
